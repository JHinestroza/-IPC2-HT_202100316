# -*- coding: utf-8 -*-
"""3.Lista Doblemente enlazada.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KtVpLaOZyZKzof3ZKMVRzdTAa65DfXVA

Definicion de clase Receta
"""

class receta:
  def __init__(self, paciente, fecha_nac, doctor, colegiado, fecha_cita, hora_cita, tipo_consulta, tratamiento):
    self.paciente = paciente
    self.fecha_nac = fecha_nac
    self.doctor = doctor
    self.colegiado = colegiado
    self.fecha_cita = fecha_cita
    self.hora_cita = hora_cita
    self.tipo_consulta = tipo_consulta
    self.tratamiento = tratamiento

"""Definicion de la clase Nodo"""

class nodo:
  def __init__(self, receta=None, siguiente=None, anterior=None):
    self.receta = receta
    self.siguiente = siguiente
    self.anterior = anterior

"""Definicion de la clase lista doblemente enlazada"""

class lista_doble:
  def __init__(self):
    self.primero = None

  def insertar(self,receta):
    if self.primero is None:
      self.primero = nodo(receta=receta)
    else:
      actual = nodo(receta=receta, siguiente=self.primero)
      self.primero.anterior = actual 
      self.primero = actual #me faltaba esta linea

  def recorrer(self):
    if self.primero is None:
      return
    actual = self.primero 
    print("Paciente:", actual.receta.paciente, 
            "| Fecha de Nacimiento: ", actual.receta.fecha_nac, 
            "| Doctor: ", actual.receta.doctor,
            "| Colegiado: ", actual.receta.colegiado,
            "| Fecha cita: ", actual.receta.fecha_cita,
            "| Hora cita: ", actual.receta.hora_cita,
            "| Consulta: ", actual.receta.tipo_consulta,
            "| Tratamiento: ", actual.receta.tratamiento)
    
    while actual.siguiente:
      actual = actual.siguiente
      print("Paciente:", actual.receta.paciente, 
            "| Fecha de Nacimiento: ", actual.receta.fecha_nac, 
            "| Doctor: ", actual.receta.doctor,
            "| Colegiado: ", actual.receta.colegiado,
            "| Fecha cita: ", actual.receta.fecha_cita,
            "| Hora cita: ", actual.receta.hora_cita,
            "| Consulta: ", actual.receta.tipo_consulta,
            "| Tratamiento: ", actual.receta.tratamiento)
      
  def eliminar(self, colegiado, fecha_cita, hora_cita):
      actual = self.primero
      while actual:
          if actual.receta.colegiado == colegiado and actual.receta.fecha_cita == fecha_cita and actual.receta.hora_cita == hora_cita:
              if actual.anterior:
                  if actual.siguiente:
                      actual.anterior.siguiente = actual.siguiente
                      actual.siguiente.anterior = actual.anterior
                  else:
                      actual.anterior.siguiente = None
              else:
                  if actual.siguiente:
                      self.primero = actual.siguiente
                      actual.siguiente.anterior = None
                  else:
                      self.primero = None
              return True
          else:
              actual = actual.siguiente
      return False

  #Modificar a travez del nombre del paciente

  def buscar(self, Name):
    actual = self.primero
    while actual:
      if actual.receta.paciente == Name:
        print("Encontrado en la lista de pacientes")
        return actual
      actual = actual.siguiente
    print("No se encontro al paciente en la lista")
    return None

  def modificar(self, paciente, new_fecha):
    nodo_modificar = self.buscar(paciente)
    if nodo_modificar is not None:
      nodo_modificar.receta.fecha_cita = new_fecha
      print("La información del paciente ha sido actualizada.")
    else:
      print("No se encontró al paciente en la lista.")

"""Creacion de nodos receta"""

r1 = receta("Gerson López","03-10-1990","Melvin Ortiz", 20156, "17-01-2023", "11:30", "Medicina general", "2 pildoras de acetaminofen cada 6 horas")
r2 = receta("Karen Gómez", "08-05-2000", "Jorge Merida", 8567, "31-01-2023", "09:00", "Medicina interna", "Tylenol de 20 ml cada 4 horas")
r3 = receta("Luis García", "17-09-1987", "Melvin Ortiz", 20157, "02-02-2023", "12:00", "Medicina general", "2 cucharadas de Pepto-Bismol cada hora hasta que la diarrea desaparezca")

"""Inserción"""

lista_d = lista_doble()
lista_d.insertar(r1)
lista_d.insertar(r2)
lista_d.insertar(r3)

"""Recorrer la lista"""

lista_d.recorrer()

"""Eliminar el nodo del medio de la lista"""

lista_d.eliminar(8567,"31-01-2023", "09:00")
lista_d.recorrer()

"""Eliminar el nodo primero de la lista"""

lista_d.eliminar(20156, "02-02-2023", "12:00")
lista_d.recorrer()

"""Eliminar nodo a nodo de la lista"""

lista_d.eliminar(20157,"02-02-2023","12:00")
lista_d.recorrer()

lista_d.eliminar( 8567,"31-01-2023", "09:00")
lista_d.recorrer()

lista_d.eliminar(20156, "17-01-2023", "11:30")
lista_d.recorrer()

"""HOJA DE TRABAJO #05"""

lista_d.modificar("Karen Gómez","25-02-2022")
print()
lista_d.recorrer()